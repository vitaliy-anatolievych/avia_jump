image: openjdk:11-jdk

variables:
  ANDROID_COMPILE_SDK: "33"
  ANDROID_BUILD_TOOLS: "30.0.2"
  ANDROID_SDK_TOOLS:   "26.0.2"

before_script:
  - export GRADLE_USER_HOME=$(pwd)/.gradle
  - chmod +x ./gradlew
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - mkdir -p android-sdk-linux/cmdline-tools
  - export ANDROID_SDK_ROOT=$PWD/android-sdk-linux
  - cd android-sdk-linux/cmdline-tools
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
  - unzip android-sdk.zip
  - rm android-sdk.zip
  - mv cmdline-tools version
  - echo y | version/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | version/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | version/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export PATH=$PATH:$ANDROID_SDK_ROOT/platform-tools/
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | version/bin/sdkmanager --licenses
  - set -o pipefail
  - cd ../../
  - chmod +x ./gradlew
  - printf "$KEYSTORE_PASSWORD\n$KEYSTORE_PASSWORD\n$DEV_NAME\nUnknown\nUnknown\nUnknown\nUnknown\nUnknown\nyes\n$KEY_PASSWORD" | keytool -genkey -v -keystore release.keystore.jks -storetype JKS -keyalg RSA -keysize 2048 -validity 10000 -alias $KEY_ALIAS
  - ls
  - base64 -i release.keystore.jks 
  

stages:
  - release

bundleRelease:
  stage: release
  script:
  - ./gradlew bundleRelease
    -Pandroid.injected.signing.store.file=$(pwd)/release.keystore.jks
    -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD
    -Pandroid.injected.signing.key.alias=$KEY_ALIAS
    -Pandroid.injected.signing.key.password=$KEY_PASSWORD
  artifacts:
    paths:
    - app/build/outputs/bundle/release
    - release.keystore.jks
